// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i17;
import 'dart:typed_data' as _i18;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/data/datasources/tv_series_local_data_source.dart'
    as _i4;
import 'package:ditonton/data/datasources/tv_series_remote_data_source.dart'
    as _i3;
import 'package:ditonton/data/models/tv_series_detail.dart' as _i5;
import 'package:ditonton/data/models/tv_series_model.dart' as _i16;
import 'package:ditonton/data/models/tv_series_table.dart' as _i11;
import 'package:ditonton/data/repositories/tv_series_repository_impl.dart'
    as _i15;
import 'package:ditonton/domain/entities/tv_series.dart' as _i13;
import 'package:ditonton/domain/entities/tv_series_detail.dart' as _i14;
import 'package:ditonton/domain/repositories/tv_series_repository.dart' as _i12;
import 'package:http/http.dart' as _i6;
import 'package:inti/inti.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/movie.dart' as _i10;
import 'package:sqflite/sqflite.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvRemoteDataSource_1 extends _i1.SmartFake
    implements _i3.TvRemoteDataSource {
  _FakeTvRemoteDataSource_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvLocalDataSource_2 extends _i1.SmartFake
    implements _i4.TvLocalDataSource {
  _FakeTvLocalDataSource_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvDetailModel_3 extends _i1.SmartFake implements _i5.TvDetailModel {
  _FakeTvDetailModel_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_4 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_5 extends _i1.SmartFake
    implements _i6.StreamedResponse {
  _FakeStreamedResponse_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i7.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i9.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i8.Future<_i9.Database?>.value())
          as _i8.Future<_i9.Database?>);
  @override
  _i8.Future<int> insertWatchlist(_i10.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlist(_i10.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i8.Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<int> insertTvWatchlist(_i11.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertTvWatchlist, [tv]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeTvWatchlist(_i11.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeTvWatchlist, [tv]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getTVById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVById, [id]),
              returnValue: _i8.Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTv() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTv, []),
              returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i12.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> searchTv(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTv, [query]),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#searchTv, [query])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getNowPlayingTv() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getNowPlayingTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getPopularTv() =>
      (super.noSuchMethod(Invocation.method(#getPopularTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getPopularTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getTopTv() =>
      (super.noSuchMethod(Invocation.method(#getTopTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getTopTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, _i14.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
          returnValue: _i8.Future<_i2.Either<_i7.Failure, _i14.TvDetail>>.value(
              _FakeEither_0<_i7.Failure, _i14.TvDetail>(
                  this, Invocation.method(#getTvDetail, [id])))) as _i8
          .Future<_i2.Either<_i7.Failure, _i14.TvDetail>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(this,
                      Invocation.method(#getTvRecommendations, [id])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i14.TvDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvSeries]),
              returnValue: _i8.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tvSeries]))))
          as _i8.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i14.TvDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvSeries]),
              returnValue: _i8.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tvSeries]))))
          as _i8.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i8.Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getWatchlistTv() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getWatchlistTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
}

/// A class which mocks [TvRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepositoryImpl extends _i1.Mock implements _i15.TvRepositoryImpl {
  MockTvRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRemoteDataSource get remoteDataSource =>
      (super.noSuchMethod(Invocation.getter(#remoteDataSource),
              returnValue: _FakeTvRemoteDataSource_1(
                  this, Invocation.getter(#remoteDataSource)))
          as _i3.TvRemoteDataSource);
  @override
  _i4.TvLocalDataSource get localDataSource => (super.noSuchMethod(
      Invocation.getter(#localDataSource),
      returnValue: _FakeTvLocalDataSource_2(
          this, Invocation.getter(#localDataSource))) as _i4.TvLocalDataSource);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getNowPlayingTv() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getNowPlayingTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getPopularTv() =>
      (super.noSuchMethod(Invocation.method(#getPopularTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getPopularTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getTopTv() =>
      (super.noSuchMethod(Invocation.method(#getTopTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getTopTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, _i14.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
          returnValue: _i8.Future<_i2.Either<_i7.Failure, _i14.TvDetail>>.value(
              _FakeEither_0<_i7.Failure, _i14.TvDetail>(
                  this, Invocation.method(#getTvDetail, [id])))) as _i8
          .Future<_i2.Either<_i7.Failure, _i14.TvDetail>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(this,
                      Invocation.method(#getTvRecommendations, [id])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i14.TvDetail? tvTable) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvTable]),
              returnValue: _i8.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tvTable]))))
          as _i8.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i14.TvDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvSeries]),
              returnValue: _i8.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tvSeries]))))
          as _i8.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i8.Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> getWatchlistTv() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTv, []),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#getWatchlistTv, [])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>> searchTv(
          String? q) =>
      (super.noSuchMethod(Invocation.method(#searchTv, [q]),
          returnValue:
              _i8.Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>.value(
                  _FakeEither_0<_i7.Failure, List<_i13.TvSeries>>(
                      this, Invocation.method(#searchTv, [q])))) as _i8
          .Future<_i2.Either<_i7.Failure, List<_i13.TvSeries>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i3.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i16.TvModel>> getNowPlayingTv() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingTv, []),
          returnValue: _i8.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]))
      as _i8.Future<List<_i16.TvModel>>);
  @override
  _i8.Future<List<_i16.TvModel>> getPopularTv() => (super.noSuchMethod(
          Invocation.method(#getPopularTv, []),
          returnValue: _i8.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]))
      as _i8.Future<List<_i16.TvModel>>);
  @override
  _i8.Future<List<_i16.TvModel>> getTopRatedTv() => (super.noSuchMethod(
          Invocation.method(#getTopRatedTv, []),
          returnValue: _i8.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]))
      as _i8.Future<List<_i16.TvModel>>);
  @override
  _i8.Future<_i5.TvDetailModel> getTvDetail(int? id) => (super.noSuchMethod(
          Invocation.method(#getTvDetail, [id]),
          returnValue: _i8.Future<_i5.TvDetailModel>.value(_FakeTvDetailModel_3(
              this, Invocation.method(#getTvDetail, [id]))))
      as _i8.Future<_i5.TvDetailModel>);
  @override
  _i8.Future<List<_i16.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
              returnValue:
                  _i8.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]))
          as _i8.Future<List<_i16.TvModel>>);
  @override
  _i8.Future<List<_i16.TvModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
              returnValue:
                  _i8.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]))
          as _i8.Future<List<_i16.TvModel>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i4.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertTvWatchlist(_i11.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertTvWatchlist, [tv]),
          returnValue: _i8.Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<String> removeTvWatchlist(_i11.TvTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeTvWatchlist, [tv]),
          returnValue: _i8.Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i11.TvTable?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: _i8.Future<_i11.TvTable?>.value())
          as _i8.Future<_i11.TvTable?>);
  @override
  _i8.Future<List<_i11.TvTable>> getWatchlistTv() => (super.noSuchMethod(
          Invocation.method(#getWatchlistTv, []),
          returnValue: _i8.Future<List<_i11.TvTable>>.value(<_i11.TvTable>[]))
      as _i8.Future<List<_i11.TvTable>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i6.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i8.Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i18.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i8.Future<_i18.Uint8List>.value(_i18.Uint8List(0)))
          as _i8.Future<_i18.Uint8List>);
  @override
  _i8.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i8.Future<_i6.StreamedResponse>.value(
                  _FakeStreamedResponse_5(
                      this, Invocation.method(#send, [request]))))
          as _i8.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
